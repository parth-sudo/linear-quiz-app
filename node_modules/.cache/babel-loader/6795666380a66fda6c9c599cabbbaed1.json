{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\anime-quiz\\\\frontface\\\\src\\\\components\\\\OptionBox.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport OptionHandler from './OptionHandler.js';\nimport { Button } from \"@material-ui/core\";\nimport Context from '../store/pause-context.js';\nimport \"../styles/QuestionBox.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction OptionBox(props) {\n  _s();\n\n  const {\n    setFreezed\n  } = useContext(Context);\n  const {\n    choice_items,\n    worthID,\n    setWorthID,\n    setRightAnswer,\n    gameLost,\n    setPause\n  } = props;\n  const [disableFreeze, setDisableFreeze] = useState(true);\n  const [showCAB, setShowCAB] = useState(false);\n  const [cabClicked, setCABClicked] = useState(false);\n  const [isCorrect, setIsCorrect] = useState(false);\n  const [showOptionBox, setShowOptionBox] = useState(false);\n  useEffect(() => {\n    const timer = setTimeout(() => setShowOptionBox(true), 3000);\n    return () => clearTimeout(timer);\n  }, []);\n\n  function optionHandler(clicked) {\n    setDisableFreeze(!clicked);\n    console.log(\"disabled-\");\n  }\n\n  function freezeOptions() {\n    setShowCAB(!showCAB); // setTimerPaused(true);\n\n    console.log(\"worthId after freezing-\");\n    console.log(worthID); // also stop the timer.\n\n    setFreezed(true);\n  }\n\n  function checkAnswer() {\n    //  console.log(\"checking answer.\"); \n    setCABClicked(!cabClicked);\n\n    if (!isCorrect) {\n      props.getResult(false); // setRightAnswer(false);\n    } else {\n      setShowCAB(!showCAB);\n      props.getResult(true); //  setRightAnswer(true);\n    }\n  }\n\n  function displayButtons() {\n    let mat = [[]],\n        arr = [];\n    choice_items.map(option => {\n      arr.push(option);\n    });\n    mat = [[arr[0], arr[1]], [arr[2], arr[3]]];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: mat.map((row, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"option-row\",\n        children: row.map(option => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(OptionHandler, {\n              option: option,\n              id: option.position,\n              onOptionClick: optionHandler,\n              disableOption: showCAB,\n              cabClicked: cabClicked,\n              setChosen: setIsCorrect,\n              worthID: worthID\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 33\n            }, this)\n          }, option.position + index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 29\n          }, this);\n        })\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }, this);\n  }\n\n  function Box() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [displayButtons(), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: \"center\",\n          backgroundColor: \"pink\"\n        },\n        children: showCAB ? /*#__PURE__*/_jsxDEV(Button, {\n          onClick: checkAnswer,\n          children: \" Check Answer \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 24\n        }, this) : /*#__PURE__*/_jsxDEV(Button, {\n          disabled: disableFreeze,\n          onClick: freezeOptions,\n          color: \"primary\",\n          children: \"Freeze\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"inner2\",\n    children: showOptionBox ? Box() : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 9\n  }, this);\n}\n\n_s(OptionBox, \"96m5MVxOWihjioWvJSh0kkenrGw=\");\n\n_c = OptionBox;\nexport default OptionBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"OptionBox\");","map":{"version":3,"sources":["D:/Projects/anime-quiz/frontface/src/components/OptionBox.js"],"names":["React","useState","useContext","useEffect","OptionHandler","Button","Context","OptionBox","props","setFreezed","choice_items","worthID","setWorthID","setRightAnswer","gameLost","setPause","disableFreeze","setDisableFreeze","showCAB","setShowCAB","cabClicked","setCABClicked","isCorrect","setIsCorrect","showOptionBox","setShowOptionBox","timer","setTimeout","clearTimeout","optionHandler","clicked","console","log","freezeOptions","checkAnswer","getResult","displayButtons","mat","arr","map","option","push","row","index","position","Box","textAlign","backgroundColor"],"mappings":"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","sourcesContent":["import React, {useState, useContext, useEffect} from 'react'\r\nimport OptionHandler from './OptionHandler.js';\r\nimport {Button} from \"@material-ui/core\";\r\n\r\nimport Context from '../store/pause-context.js';\r\nimport \"../styles/QuestionBox.css\";\r\n\r\nfunction OptionBox(props) {\r\n\r\n  const { setFreezed } = useContext(Context);\r\n  const {choice_items, worthID, setWorthID, setRightAnswer, gameLost, setPause} = props;\r\n\r\n  const [disableFreeze, setDisableFreeze] = useState(true);\r\n  const [showCAB, setShowCAB] = useState(false);\r\n  const [cabClicked, setCABClicked] = useState(false);\r\n  const [isCorrect, setIsCorrect] = useState(false);\r\n  const [showOptionBox, setShowOptionBox] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => setShowOptionBox(true), 3000);\r\n    return () => clearTimeout(timer);\r\n  }, []);\r\n\r\n  function optionHandler(clicked) {\r\n    setDisableFreeze(!clicked);\r\n    console.log(\"disabled-\");\r\n }\r\n \r\n function freezeOptions() {\r\n   \r\n    setShowCAB(!showCAB);\r\n  \r\n    // setTimerPaused(true);\r\n    console.log(\"worthId after freezing-\");\r\n    console.log(worthID);\r\n\r\n     // also stop the timer.\r\n     setFreezed(true);\r\n }\r\n\r\n function checkAnswer() {\r\n    //  console.log(\"checking answer.\"); \r\n     setCABClicked(!cabClicked);\r\n\r\n     if(!isCorrect) {\r\n\r\n        props.getResult(false);\r\n        // setRightAnswer(false);\r\n     }\r\n     else {\r\n       setShowCAB(!showCAB);\r\n       props.getResult(true);\r\n      //  setRightAnswer(true);\r\n \r\n     }\r\n\r\n }\r\n\r\n    function displayButtons() {\r\n\r\n      let mat = [[]], arr = [];\r\n      choice_items.map((option) => {\r\n          arr.push(option);\r\n      })\r\n\r\n      mat = [ [arr[0], arr[1]], [arr[2], arr[3]] ];\r\n          \r\n      return (\r\n          <div>        \r\n            {\r\n\r\n            mat.map((row, index) => ( \r\n              <div key={index} className=\"option-row\">\r\n                { row.map( (option) => {\r\n                    return (\r\n                            <div key={option.position + index}>\r\n                                <OptionHandler \r\n                                option={option} \r\n                                id={option.position} \r\n                                onOptionClick = {optionHandler}\r\n                                disableOption = {showCAB}\r\n                                cabClicked = {cabClicked}\r\n                                setChosen = {setIsCorrect}\r\n                                worthID = {worthID}\r\n                                /> \r\n                            </div>\r\n                          )\r\n                  } ) \r\n                }\r\n                </div>\r\n              ))\r\n\r\n            } \r\n        </div>\r\n      )\r\n    }\r\n\r\n    function Box() {\r\n      return (\r\n        <div>\r\n\r\n           {displayButtons()}\r\n    \r\n          <div style={{textAlign: \"center\", backgroundColor: \"pink\" }}>\r\n          \r\n            {showCAB ? <Button onClick={checkAnswer}> Check Answer </Button>: \r\n            <Button disabled={disableFreeze} onClick={freezeOptions} color=\"primary\">\r\n              Freeze\r\n            </Button>}\r\n\r\n          </div>\r\n          \r\n        </div>\r\n      )\r\n    }\r\n\r\n    return (\r\n        <div id=\"inner2\">\r\n            {showOptionBox ? Box() : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OptionBox\r\n"]},"metadata":{},"sourceType":"module"}