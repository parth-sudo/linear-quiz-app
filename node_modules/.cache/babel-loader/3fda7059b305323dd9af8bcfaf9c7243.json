{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\anime-quiz\\\\frontface\\\\src\\\\components\\\\Game.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, createContext, useContext } from \"react\";\nimport Container from \"./Container\";\nimport QuestionBox from \"./QuestionBox\";\nimport Ladder from \"./Ladder.js\";\nimport OptionBox from \"./OptionBox.js\";\nimport Pause from \"./Pause\";\nimport \"../styles/Game.css\";\nimport { Grid, Typography, Button, ButtonGroup } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport Context from '../store/pause-context.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Game() {\n  _s();\n\n  // get all choices, questions, worth.\n  //\n  const [worths, setWorths] = useState([]);\n  const [choices, setChoices] = useState([]);\n  const [questions, setQuestions] = useState([]);\n  const [worthID, setWorthID] = useState(0);\n  const [prevID, setPrevID] = useState(1);\n  const [gameLost, setGameLost] = useState(false);\n  const [freezed, setFreezed] = useState(false);\n  const [choiceItems, setChoiceItems] = useState([]);\n  const [question, setQuestion] = useState(null);\n  const [rightAnswer, setRightAnswer] = useState({\n    pos: 0,\n    val: 'null'\n  });\n  useEffect(() => {\n    console.log(\"First useEffect\");\n    fetch(\"http://localhost:8000/api/list-worth/\").then(response => response.json()).then(data => {\n      setWorths(data);\n      console.log(data);\n    });\n    fetch(\"http://localhost:8000/api/list-q/\").then(response => response.json()).then(data => {\n      setQuestions(data);\n    });\n    fetch(\"http://localhost:8000/api/list-c/\").then(response => response.json()).then(data => {\n      setChoices(data);\n    });\n  }, []);\n  useEffect(() => {\n    if (worthID > 0) {\n      console.log(\"second useEffect running\");\n      const question_items = questions.filter(question => {\n        return question.worth === worthID;\n      });\n      const question = question_items[Math.floor(Math.random() * question_items.length)];\n      const choice_items = choices.filter(choice => choice.question === question.id);\n      const sahiJawab = choice_items.find(c => c.is_correct);\n      const obj = {\n        pos: 0,\n        val: 'null'\n      };\n      obj.pos = sahiJawab.position;\n      obj.val = sahiJawab.choice;\n      setRightAnswer(obj);\n      setQuestion(question);\n      console.log(question);\n      setChoiceItems(choice_items);\n      console.log(rightAnswer);\n    }\n  }, [worthID, questions, choices]);\n\n  function boxHolder() {\n    console.log(\"boxHolder rendering\"); // console.log(question);\n\n    console.log(choiceItems);\n\n    if (question !== null) {\n      return /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Context.Provider, {\n          value: {\n            freezed,\n            setFreezed\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(QuestionBox, {\n              worthID: worthID,\n              setWorthID: setWorthID,\n              question: question\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(OptionBox, {\n              choice_items: choiceItems // setRightAnswer = {setRightAnswer}\n              ,\n              worthID: worthID,\n              setWorthID: setWorthID,\n              getResult: getResult\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this);\n    }\n  } // prop function.\n\n\n  function getResult(isCorrect) {\n    if (isCorrect) {\n      // console.log(\" func get result says absolutely true\");\n      setWorthID(worthID + 1);\n    } else {\n      setGameLost(true);\n      console.log(gameLost);\n      console.log(\"galat jawab hai lololol.\");\n    }\n  }\n\n  const alphabet = id => {\n    if (id === 1) {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \" A. \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 16\n      }, this);\n    } else if (id === 2) {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \" B. \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 14\n      }, this);\n    } else if (id === 3) {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \" C. \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 14\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \" D. \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 12\n    }, this);\n  };\n\n  function gameLostMessage() {\n    if (rightAnswer.pos > 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            margin: '0 auto',\n            backgroundColor: 'white',\n            color: 'black'\n          },\n          children: [\" Wrong! The correct answer is \", /*#__PURE__*/_jsxDEV(\"i\", {\n            children: [\" \", alphabet(rightAnswer.pos), \" \", rightAnswer.val, \". \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 113\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            backgroundColor: 'white',\n            color: 'black'\n          },\n          children: [\" You take away \\u20B9\", amountWonOnLosing(), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"secondary\",\n          to: \"/\",\n          component: Link,\n          children: \" Back to Home \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 7\n      }, this);\n    }\n  }\n\n  const amountWonOnLosing = () => {\n    let i = worthID;\n\n    if (i >= 5 && i < 10) {\n      return worths[5].cost;\n    } else if (i >= 10 && i < 15) {\n      return worths[10].cost;\n    }\n\n    return 0;\n  };\n\n  function putNextQuestion() {\n    console.log(worthID);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'relative',\n        left: '150px',\n        textAlign: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          color: 'white'\n        },\n        onClick: () => setRightAnswer(true),\n        children: [\" Right answer!  \", /*#__PURE__*/_jsxDEV(Button, {\n          color: \"secondary\",\n          children: \" Next \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 90\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this);\n  }\n\n  const resetStates = () => {\n    if (rightAnswer) {\n      setRightAnswer(false);\n      setPrevID(worthID);\n      setFreezed(false);\n    }\n  };\n\n  function continueGame() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [worthID === 1 ? boxHolder() : null, prevID < worthID ? putNextQuestion() : null, resetStates(), prevID === worthID && prevID > 1 ? boxHolder() : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [worthID === 0 ? /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          alignItems: 'center'\n        },\n        color: \"secondary\",\n        onClick: () => setWorthID(worthID + 1),\n        children: \"Ready?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 17\n      }, this) : null, gameLost ? gameLostMessage() : continueGame()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Ladder, {\n      worthID: worthID,\n      worths: worths\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 211,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Game, \"h98YNSXzclrufT1VowvluGZYlKA=\");\n\n_c = Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["D:/Projects/anime-quiz/frontface/src/components/Game.js"],"names":["React","useState","useEffect","createContext","useContext","Container","QuestionBox","Ladder","OptionBox","Pause","Grid","Typography","Button","ButtonGroup","Link","Context","Game","worths","setWorths","choices","setChoices","questions","setQuestions","worthID","setWorthID","prevID","setPrevID","gameLost","setGameLost","freezed","setFreezed","choiceItems","setChoiceItems","question","setQuestion","rightAnswer","setRightAnswer","pos","val","console","log","fetch","then","response","json","data","question_items","filter","worth","Math","floor","random","length","choice_items","choice","id","sahiJawab","find","c","is_correct","obj","position","boxHolder","getResult","isCorrect","alphabet","gameLostMessage","margin","backgroundColor","color","amountWonOnLosing","i","cost","putNextQuestion","left","textAlign","resetStates","continueGame","alignItems"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, createContext, useContext } from \"react\";\r\nimport Container from \"./Container\";\r\nimport QuestionBox from \"./QuestionBox\";\r\nimport Ladder from \"./Ladder.js\";\r\nimport OptionBox from \"./OptionBox.js\";\r\nimport Pause from \"./Pause\";\r\nimport \"../styles/Game.css\";\r\nimport { Grid, Typography, Button, ButtonGroup } from \"@material-ui/core\";\r\nimport {Link} from \"react-router-dom\";\r\nimport Context from '../store/pause-context.js';\r\n\r\n\r\nexport default function Game() {\r\n  // get all choices, questions, worth.\r\n  //\r\n  const [worths, setWorths] = useState([]);\r\n  const [choices, setChoices] = useState([]);\r\n  const [questions, setQuestions] = useState([]);\r\n  \r\n  const [worthID, setWorthID] = useState(0);\r\n  const [prevID, setPrevID] = useState(1);\r\n\r\n  const [gameLost, setGameLost] = useState(false);\r\n\r\n  const [freezed, setFreezed] = useState(false);\r\n\r\n  const [choiceItems, setChoiceItems] = useState([]);\r\n  const [question, setQuestion] = useState(null);\r\n\r\n  const [rightAnswer, setRightAnswer] = useState({pos : 0, val : 'null'});\r\n\r\n  useEffect(() => {\r\n\r\n    console.log(\"First useEffect\");\r\n\r\n\r\n    fetch(\"http://localhost:8000/api/list-worth/\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setWorths(data);\r\n        console.log(data);\r\n      });\r\n\r\n    fetch(\"http://localhost:8000/api/list-q/\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setQuestions(data);\r\n     \r\n      });\r\n\r\n    fetch(\"http://localhost:8000/api/list-c/\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setChoices(data);\r\n   \r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n     \r\n    if(worthID > 0) {\r\n\r\n      console.log(\"second useEffect running\");\r\n   \r\n      const question_items = questions.filter((question) => {\r\n        return question.worth === worthID;\r\n      });\r\n      const question = question_items[Math.floor(Math.random() * question_items.length)];\r\n  \r\n      const choice_items = choices.filter( \r\n        (choice) => choice.question === question.id\r\n      );\r\n\r\n      const sahiJawab = choice_items.find(c => c.is_correct);\r\n      const obj = {pos : 0, val : 'null'};\r\n      obj.pos = sahiJawab.position;\r\n      obj.val = sahiJawab.choice;\r\n\r\n      setRightAnswer(obj);\r\n      \r\n      setQuestion(question);\r\n      console.log(question);\r\n      setChoiceItems(choice_items);\r\n\r\n      console.log(rightAnswer);\r\n\r\n    }\r\n  }, [worthID, questions, choices])\r\n\r\n\r\n  function boxHolder() {\r\n    console.log(\"boxHolder rendering\");\r\n    // console.log(question);\r\n    console.log(choiceItems);\r\n \r\n\r\n    if(question !== null) {\r\n      return (\r\n        <Container>\r\n          <Context.Provider value = {{freezed, setFreezed}}>\r\n          <div id=\"wrapper\">\r\n            <QuestionBox worthID={worthID} \r\n            setWorthID={setWorthID}\r\n            question={question}\r\n            />\r\n  \r\n            <OptionBox choice_items={choiceItems} \r\n            // setRightAnswer = {setRightAnswer}\r\n            worthID = {worthID} \r\n            setWorthID={setWorthID}\r\n            getResult = {getResult}\r\n            />\r\n           </div>\r\n          </Context.Provider>\r\n        </Container>\r\n      )\r\n\r\n    }\r\n\r\n   \r\n\r\n  }\r\n\r\n  // prop function.\r\n  function getResult(isCorrect) {\r\n    if(isCorrect) {\r\n      // console.log(\" func get result says absolutely true\");\r\n      setWorthID(worthID + 1);\r\n    }\r\n    else {\r\n      setGameLost(true);\r\n      console.log(gameLost);\r\n      console.log(\"galat jawab hai lololol.\");\r\n    }\r\n\r\n  }\r\n\r\n  const alphabet = (id) => {\r\n    if(id === 1) {\r\n        return <span> A. </span>;\r\n    }\r\n    else if(id === 2) {\r\n      return <span> B. </span>;\r\n    }\r\n    else if(id === 3) {\r\n      return <span> C. </span>;\r\n    }\r\n    return <span> D. </span>;\r\n}\r\n \r\n function gameLostMessage() {\r\n \r\n  if(rightAnswer.pos > 0) {\r\n\r\n    return (\r\n      <div> \r\n\r\n        <h2 style={{ margin: '0 auto', backgroundColor: 'white', color: 'black'}}> Wrong! The correct answer is <i> {alphabet(rightAnswer.pos)} {rightAnswer.val}. </i> </h2>\r\n        <h3 style={{backgroundColor: 'white', color: 'black'}}> You take away ₹{amountWonOnLosing()} </h3>\r\n        <Button color=\"secondary\" to = \"/\" component={Link}> Back to Home </Button>\r\n      </div>\r\n    )\r\n\r\n  }\r\n    \r\n }\r\n\r\n const amountWonOnLosing = () => {\r\n  let i = worthID;\r\n  if(i >= 5 && i < 10) {\r\n    return worths[5].cost;\r\n  }\r\n  else if(i >= 10 && i < 15) {\r\n    return worths[10].cost;\r\n  }\r\n  return 0; \r\n}\r\n\r\n  function putNextQuestion() {\r\n    console.log(worthID);\r\n    return (\r\n      <div style={{position: 'relative', left: '150px', textAlign : 'center'}}> \r\n       <h3 style={{color: 'white'}} onClick={() => setRightAnswer(true)}> Right answer!  <Button color=\"secondary\"> Next </Button></h3>\r\n     </div> \r\n   )\r\n  }\r\n\r\n  const resetStates = () => {\r\n        if(rightAnswer) {\r\n          setRightAnswer(false);\r\n          setPrevID(worthID);\r\n          setFreezed(false);\r\n        }\r\n  }\r\n\r\n  function continueGame() {\r\n    return (\r\n      <div>\r\n\r\n        {worthID === 1 ? boxHolder() : null}\r\n        {prevID < worthID ? putNextQuestion() : null}\r\n        {resetStates()}\r\n        {prevID === worthID && prevID > 1 ? boxHolder() : null}\r\n\r\n    </div>\r\n    )\r\n      \r\n  }\r\n \r\n  return (\r\n    <div className=\"game\">\r\n\r\n      {/* {gameLost ? : } */}\r\n    \r\n\r\n      {/* ready button */}\r\n      <div className=\"container\"> \r\n\r\n      {worthID === 0 ? (\r\n                <Button style={{alignItems : 'center'}} color=\"secondary\" onClick={() => setWorthID(worthID + 1)}>\r\n                  Ready?\r\n                </Button>\r\n              ) : null}\r\n   \r\n\r\n        {gameLost ? gameLostMessage() : continueGame()}\r\n        \r\n\r\n\r\n      </div>\r\n\r\n      <Ladder worthID={worthID} worths={worths} />\r\n\r\n    </div>\r\n  );\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}