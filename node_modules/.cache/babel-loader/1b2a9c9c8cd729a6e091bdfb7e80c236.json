{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\anime-quiz\\\\frontface\\\\src\\\\components\\\\Game.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, createContext, useContext } from \"react\";\nimport Container from \"./Container\";\nimport QuestionBox from \"./QuestionBox\";\nimport Ladder from \"./Ladder.js\";\nimport OptionBox from \"./OptionBox.js\";\nimport Pause from \"./Pause\";\nimport \"../styles/Game.css\";\nimport { Grid, Typography, Button, ButtonGroup } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport Context from '../store/pause-context.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Game() {\n  _s();\n\n  // get all choices, questions, worth.\n  //\n  let actual_answer = null,\n      actual_id = null;\n  const [worths, setWorths] = useState([]);\n  const [choices, setChoices] = useState([]);\n  const [questions, setQuestions] = useState([]);\n  const [Question, setQuestion] = useState({});\n  const [choiceItems, setChoiceItems] = useState([]);\n  const [worthID, setWorthID] = useState(0);\n  const [prevID, setPrevID] = useState(1);\n  const [rightAnswer, setRightAnswer] = useState(false);\n  const [gameLost, setGameLost] = useState(false);\n  const [timerPaused, setTimerPaused] = useState(false);\n  const [actualAns, setActualAns] = useState({\n    id: '',\n    ans: ''\n  });\n  useEffect(() => {\n    console.log(\"boxHolder rendering\");\n    const question_items = questions.filter(question => {\n      return question.worth === worthID;\n    });\n    const question = question_items[Math.floor(Math.random() * question_items.length)];\n    setQuestion(question);\n    console.log(question);\n    const choice_items = choices.filter(choice => choice.question === question.id);\n    choice_items.map(choice => {\n      if (choice.is_correct) {\n        let obj = {\n          id: choice.choice,\n          ans: choice.position\n        };\n        setActualAns(obj);\n      }\n    });\n    console.log(choice_items);\n    setChoiceItems(choice_items);\n    console.log(questions);\n  }, [worthID]);\n  useEffect(() => {\n    fetch(\"http://localhost:8000/api/list-worth/\").then(response => response.json()).then(data => {\n      setWorths(data);\n    });\n    fetch(\"http://localhost:8000/api/list-q/\").then(response => response.json()).then(data => {\n      setQuestions(data);\n    });\n    fetch(\"http://localhost:8000/api/list-c/\").then(response => response.json()).then(data => {\n      setChoices(data);\n    });\n  }, []);\n\n  function boxHolder() {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Context.Provider, {\n        value: {\n          timerPaused,\n          setTimerPaused\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(QuestionBox, {\n            worthID: worthID,\n            setWorthID: setWorthID,\n            question: Question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(OptionBox, {\n            choice_items: choiceItems // setRightAnswer = {setRightAnswer}\n            ,\n            worthID: worthID,\n            setWorthID: setWorthID,\n            getResult: getResult\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this);\n  } // prop function.\n\n\n  function getResult(isCorrect) {\n    if (isCorrect) {\n      // console.log(\" func get result says absolutely true\");\n      setWorthID(worthID + 1);\n    } else {\n      setGameLost(true);\n      console.log(gameLost);\n    }\n  }\n\n  function gameLostMessage() {\n    // const question_items = questions.filter((question) => {\n    //   return question.worth === worthID;\n    // });\n    // const question = question_items[Math.floor(Math.random() * question_items.length)];\n    // const choice_items = choices.filter( \n    //   (choice) => choice.question === question.id\n    // );\n    console.log(actual_id);\n    console.log(actual_answer);\n    let ans = null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          backgroundColor: 'white',\n          color: 'black'\n        },\n        children: [\" Wrong! The correct answer is \", /*#__PURE__*/_jsxDEV(\"i\", {\n          children: [\" \", alphabet(actualAns.id), \" \", actualAns.ans]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 94\n        }, this), \". \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          backgroundColor: 'white',\n          color: 'black'\n        },\n        children: [\" You take away \\u20B9\", amountWonOnLosing(), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"secondary\",\n        to: \"/\",\n        component: Link,\n        children: \" Back to Home \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this);\n  }\n\n  function putNextQuestion() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        alignItems: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          color: 'black'\n        },\n        onClick: () => setRightAnswer(true),\n        children: \" Right answer! Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this);\n  }\n\n  const resetStates = () => {\n    if (rightAnswer) {\n      setRightAnswer(false);\n      setPrevID(worthID);\n    }\n  };\n\n  function continueGame() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [worthID === 1 ? boxHolder() : null, prevID < worthID ? putNextQuestion() : null, resetStates(), prevID === worthID && prevID > 1 ? boxHolder() : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this);\n  }\n\n  const amountWonOnLosing = () => {\n    let i = worthID;\n\n    if (i >= 5 && i < 10) {\n      return worths[5].cost;\n    } else if (i >= 10 && i < 15) {\n      return worths[10].cost;\n    }\n\n    return 0;\n  };\n\n  const alphabet = id => {\n    if (id === 1) {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \" A. \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 16\n      }, this);\n    } else if (id === 2) {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \" B. \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 14\n      }, this);\n    } else if (id === 3) {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \" C. \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 14\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \" D. \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 12\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [worthID === 0 ? /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          alignItems: 'center'\n        },\n        color: \"secondary\",\n        onClick: () => setWorthID(worthID + 1),\n        children: \"Ready?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }, this) : null, gameLost ? gameLostMessage() : continueGame()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Ladder, {\n      worthID: worthID,\n      worths: worths\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 199,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Game, \"2X2tTBftZ45+QtCyzYxTHoDGJ1Q=\");\n\n_c = Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["D:/Projects/anime-quiz/frontface/src/components/Game.js"],"names":["React","useState","useEffect","createContext","useContext","Container","QuestionBox","Ladder","OptionBox","Pause","Grid","Typography","Button","ButtonGroup","Link","Context","Game","actual_answer","actual_id","worths","setWorths","choices","setChoices","questions","setQuestions","Question","setQuestion","choiceItems","setChoiceItems","worthID","setWorthID","prevID","setPrevID","rightAnswer","setRightAnswer","gameLost","setGameLost","timerPaused","setTimerPaused","actualAns","setActualAns","id","ans","console","log","question_items","filter","question","worth","Math","floor","random","length","choice_items","choice","map","is_correct","obj","position","fetch","then","response","json","data","boxHolder","getResult","isCorrect","gameLostMessage","backgroundColor","color","alphabet","amountWonOnLosing","putNextQuestion","alignItems","resetStates","continueGame","i","cost"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, createContext, useContext } from \"react\";\r\nimport Container from \"./Container\";\r\nimport QuestionBox from \"./QuestionBox\";\r\nimport Ladder from \"./Ladder.js\";\r\nimport OptionBox from \"./OptionBox.js\";\r\nimport Pause from \"./Pause\";\r\nimport \"../styles/Game.css\";\r\nimport { Grid, Typography, Button, ButtonGroup } from \"@material-ui/core\";\r\nimport {Link} from \"react-router-dom\";\r\nimport Context from '../store/pause-context.js';\r\n\r\n\r\nexport default function Game() {\r\n  // get all choices, questions, worth.\r\n  //\r\n  let actual_answer = null, actual_id = null;\r\n  const [worths, setWorths] = useState([]);\r\n  const [choices, setChoices] = useState([]);\r\n  const [questions, setQuestions] = useState([]);\r\n  const [Question, setQuestion] = useState({});\r\n  const [choiceItems, setChoiceItems] = useState([]);\r\n  \r\n  const [worthID, setWorthID] = useState(0);\r\n  const [prevID, setPrevID] = useState(1);\r\n  const [rightAnswer, setRightAnswer] = useState(false);\r\n  const [gameLost, setGameLost] = useState(false);\r\n\r\n  const [timerPaused, setTimerPaused] = useState(false);\r\n\r\n  const [actualAns, setActualAns] = useState({id : '', ans : ''});\r\n  \r\n  useEffect(() => {\r\n    console.log(\"boxHolder rendering\");\r\n    const question_items = questions.filter((question) => {\r\n      return question.worth === worthID;\r\n    });\r\n    const question = question_items[Math.floor(Math.random() * question_items.length)];\r\n\r\n    setQuestion(question);\r\n    console.log(question);\r\n    const choice_items = choices.filter( \r\n      (choice) => choice.question === question.id\r\n    );\r\n    choice_items.map((choice) => {\r\n      if(choice.is_correct) {\r\n        let obj = {id:choice.choice, ans:choice.position};\r\n        setActualAns(obj);\r\n      }\r\n    })\r\n    console.log(choice_items);\r\n    setChoiceItems(choice_items);\r\n\r\n    console.log(questions);\r\n\r\n  }, [worthID]);\r\n\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:8000/api/list-worth/\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setWorths(data);\r\n\r\n      });\r\n\r\n    fetch(\"http://localhost:8000/api/list-q/\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setQuestions(data);\r\n\r\n      });\r\n\r\n    fetch(\"http://localhost:8000/api/list-c/\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setChoices(data);\r\n      });\r\n  }, []);\r\n\r\n \r\n  \r\nfunction boxHolder() {\r\n\r\n\r\n    return (\r\n      <Container>\r\n        <Context.Provider value = {{timerPaused, setTimerPaused}}>\r\n        <div id=\"wrapper\">\r\n          <QuestionBox worthID={worthID} \r\n          setWorthID={setWorthID}\r\n          question={Question}\r\n          />\r\n\r\n          <OptionBox choice_items={choiceItems} \r\n          // setRightAnswer = {setRightAnswer}\r\n          worthID = {worthID} \r\n          setWorthID={setWorthID}\r\n          getResult = {getResult}\r\n          />\r\n         </div>\r\n        </Context.Provider>\r\n      </Container>\r\n    )\r\n  }\r\n\r\n  // prop function.\r\n \r\nfunction getResult(isCorrect) {\r\n  if(isCorrect) {\r\n    // console.log(\" func get result says absolutely true\");\r\n    setWorthID(worthID + 1);\r\n  }\r\n  else {\r\n    setGameLost(true);\r\n\r\n    console.log(gameLost);\r\n  }\r\n\r\n}\r\n \r\n function gameLostMessage() {\r\n  // const question_items = questions.filter((question) => {\r\n  //   return question.worth === worthID;\r\n  // });\r\n  // const question = question_items[Math.floor(Math.random() * question_items.length)];\r\n  // const choice_items = choices.filter( \r\n  //   (choice) => choice.question === question.id\r\n  // );\r\n\r\n  console.log(actual_id);\r\n  console.log(actual_answer);\r\n\r\n  let ans = null;\r\n \r\n    return (\r\n      <div> \r\n        <h2 style={{backgroundColor: 'white', color: 'black'}}> Wrong! The correct answer is <i> {alphabet(actualAns.id)} {actualAns.ans}</i>. </h2>\r\n        <h3 style={{backgroundColor: 'white', color: 'black'}}> You take away ₹{amountWonOnLosing()} </h3>\r\n        <Button color=\"secondary\" to = \"/\" component={Link}> Back to Home </Button>\r\n      </div>\r\n    )\r\n }\r\n\r\n  function putNextQuestion() {\r\n\r\n    return (\r\n      <div style={{alignItems : 'center'}}> \r\n       <button style={{color: 'black'}} onClick={() => setRightAnswer(true)}> Right answer! Next</button>\r\n     </div> \r\n   )\r\n  }\r\n\r\n  const resetStates = () => {\r\n        if(rightAnswer) {\r\n          setRightAnswer(false);\r\n          setPrevID(worthID);\r\n        }\r\n  }\r\n\r\n  function continueGame() {\r\n    return (\r\n      <div>\r\n\r\n        {worthID === 1 ? boxHolder() : null}\r\n        {prevID < worthID ? putNextQuestion() : null}\r\n        {resetStates()}\r\n        {prevID === worthID && prevID > 1 ? boxHolder() : null}\r\n\r\n    </div>\r\n    )\r\n      \r\n  }\r\n\r\n  const amountWonOnLosing = () => {\r\n    let i = worthID;\r\n    if(i >= 5 && i < 10) {\r\n      return worths[5].cost;\r\n    }\r\n    else if(i >= 10 && i < 15) {\r\n      return worths[10].cost;\r\n    }\r\n    return 0; \r\n  }\r\n\r\n  const alphabet = (id) => {\r\n    if(id === 1) {\r\n        return <span> A. </span>;\r\n    }\r\n    else if(id === 2) {\r\n      return <span> B. </span>;\r\n    }\r\n    else if(id === 3) {\r\n      return <span> C. </span>;\r\n    }\r\n    return <span> D. </span>;\r\n}\r\n \r\n  return (\r\n    <div className=\"game\">\r\n\r\n      {/* {gameLost ? : } */}\r\n    \r\n\r\n      {/* ready button */}\r\n      <div className=\"container\"> \r\n\r\n      {worthID === 0 ? (\r\n                <Button style={{alignItems : 'center'}} color=\"secondary\" onClick={() => setWorthID(worthID + 1)}>\r\n                  Ready?\r\n                </Button>\r\n              ) : null}\r\n   \r\n\r\n        {gameLost ? gameLostMessage() : continueGame()}\r\n\r\n      </div>\r\n\r\n      <Ladder worthID={worthID} worths={worths} />\r\n\r\n    </div>\r\n  );\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}