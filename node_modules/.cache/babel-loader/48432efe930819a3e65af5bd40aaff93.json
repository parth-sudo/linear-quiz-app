{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\anime-quiz\\\\frontface\\\\src\\\\components\\\\OptionBox.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport OptionHandler from './OptionHandler.js';\nimport { Button } from \"@material-ui/core\";\nimport Context from '../store/pause-context.js';\nimport \"../styles/QuestionBox.css\";\nimport lock from \"../soundEffects/lock.mp3\";\nimport clap from '../soundEffects/clap.mp3';\nimport wrong from \"../soundEffects/wrong.mp3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction OptionBox(props) {\n  _s();\n\n  const {\n    setFreezed\n  } = useContext(Context);\n  const {\n    choice_items,\n    worthID,\n    TL\n  } = props;\n  const [disableFreeze, setDisableFreeze] = useState(true);\n  const [showCAB, setShowCAB] = useState(false);\n  const [cabClicked, setCABClicked] = useState(false);\n  const [isCorrect, setIsCorrect] = useState(false);\n  const [showOptionBox, setShowOptionBox] = useState(false);\n  const [lockSound, setLockSound] = useState(new Audio(lock));\n  useEffect(() => {\n    console.log(TL + 7000);\n    const delay = TL + 7000;\n    const timer = setTimeout(() => setShowOptionBox(true), TL);\n    return () => clearTimeout(timer);\n  }, []);\n  useEffect(() => {\n    if (cabClicked) {\n      console.log(\"pausing chuklanion ki mkb\");\n      lockSound.pause();\n    }\n  }, [cabClicked]);\n\n  function optionHandler(clicked) {\n    setDisableFreeze(!clicked);\n    console.log(\"disabled-\");\n  }\n\n  function freezeOptions() {\n    setShowCAB(!showCAB); // setTimerPaused(true);\n\n    console.log(\"worthId after freezing-\");\n    console.log(worthID);\n    setFreezed(true); //  let sound = new Audio(lock);\n    //  sound.play();\n\n    lockSound.play();\n  }\n\n  function checkAnswer() {\n    console.log(\"checking answer.\");\n    setCABClicked(!cabClicked);\n\n    if (!isCorrect) {\n      lockSound.pause();\n      props.getResult(false); // setRightAnswer(false);\n\n      let sound = new Audio(wrong);\n      sound.play();\n    } else {\n      lockSound.pause();\n      setShowCAB(!showCAB);\n      props.getResult(true); //  setRightAnswer(true);\n\n      let song = new Audio(clap);\n      song.play();\n    }\n  }\n\n  function displayButtons() {\n    let mat = [[]],\n        arr = [];\n    choice_items.map(option => {\n      arr.push(option);\n    });\n    mat = [[arr[0], arr[1]], [arr[2], arr[3]]];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: mat.map((row, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"option-row\",\n        children: row.map(option => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(OptionHandler, {\n              option: option,\n              id: option.position,\n              onOptionClick: optionHandler,\n              disableOption: showCAB,\n              cabClicked: cabClicked,\n              setChosen: setIsCorrect,\n              worthID: worthID\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 33\n            }, this)\n          }, option.position + index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 29\n          }, this);\n        })\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }, this);\n  }\n\n  function Box() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [displayButtons(), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: \"center\",\n          border: \"1px solid white\",\n          backgroundColor: \"#283149\"\n        },\n        children: showCAB ? /*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            color: \"#EFE9EF\"\n          },\n          onClick: checkAnswer,\n          children: \" Check Answer \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 24\n        }, this) : /*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            color: \"white\"\n          },\n          disabled: disableFreeze,\n          onClick: freezeOptions,\n          color: \"primary\",\n          children: \"Freeze\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"inner2\",\n    children: showOptionBox ? Box() : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 9\n  }, this);\n}\n\n_s(OptionBox, \"QgVe197wEYYVNlDcNSmE8ekq/WA=\");\n\n_c = OptionBox;\nexport default OptionBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"OptionBox\");","map":{"version":3,"sources":["D:/Projects/anime-quiz/frontface/src/components/OptionBox.js"],"names":["React","useState","useContext","useEffect","OptionHandler","Button","Context","lock","clap","wrong","OptionBox","props","setFreezed","choice_items","worthID","TL","disableFreeze","setDisableFreeze","showCAB","setShowCAB","cabClicked","setCABClicked","isCorrect","setIsCorrect","showOptionBox","setShowOptionBox","lockSound","setLockSound","Audio","console","log","delay","timer","setTimeout","clearTimeout","pause","optionHandler","clicked","freezeOptions","play","checkAnswer","getResult","sound","song","displayButtons","mat","arr","map","option","push","row","index","position","Box","textAlign","border","backgroundColor","color"],"mappings":"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","sourcesContent":["import React, {useState, useContext, useEffect} from 'react'\r\nimport OptionHandler from './OptionHandler.js';\r\nimport {Button} from \"@material-ui/core\";\r\n\r\nimport Context from '../store/pause-context.js';\r\nimport \"../styles/QuestionBox.css\";\r\nimport lock from \"../soundEffects/lock.mp3\";\r\nimport clap from '../soundEffects/clap.mp3';\r\nimport wrong from \"../soundEffects/wrong.mp3\";\r\n\r\nfunction OptionBox(props) {\r\n\r\n  const { setFreezed } = useContext(Context);\r\n  const {choice_items, worthID, TL} = props;\r\n\r\n  const [disableFreeze, setDisableFreeze] = useState(true);\r\n  const [showCAB, setShowCAB] = useState(false);\r\n  const [cabClicked, setCABClicked] = useState(false);\r\n  const [isCorrect, setIsCorrect] = useState(false);\r\n  const [showOptionBox, setShowOptionBox] = useState(false);\r\n\r\n  const [lockSound, setLockSound] = useState(new Audio(lock));\r\n\r\n\r\n  useEffect(() => {\r\n    console.log(TL + 7000);\r\n    const delay = TL + 7000;\r\n    const timer = setTimeout(() => setShowOptionBox(true), TL);\r\n    return () => clearTimeout(timer);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n\r\n    if(cabClicked)  {\r\n      console.log(\"pausing chuklanion ki mkb\");\r\n      lockSound.pause();\r\n    }\r\n \r\n  }, [cabClicked]);\r\n\r\n  function optionHandler(clicked) {\r\n    setDisableFreeze(!clicked);\r\n    console.log(\"disabled-\");\r\n }\r\n \r\n function freezeOptions() {\r\n   \r\n    setShowCAB(!showCAB);\r\n  \r\n    // setTimerPaused(true);\r\n    console.log(\"worthId after freezing-\");\r\n    console.log(worthID);\r\n\r\n     setFreezed(true);\r\n    //  let sound = new Audio(lock);\r\n    //  sound.play();\r\n    lockSound.play();\r\n }\r\n\r\n function checkAnswer() {\r\n      console.log(\"checking answer.\"); \r\n     setCABClicked(!cabClicked);\r\n\r\n     if(!isCorrect) {\r\n      lockSound.pause();\r\n        props.getResult(false);\r\n        // setRightAnswer(false);\r\n        let sound  = new Audio(wrong);\r\n        sound.play();\r\n     }\r\n     else {\r\n      lockSound.pause();\r\n       setShowCAB(!showCAB);\r\n       props.getResult(true);\r\n      //  setRightAnswer(true);\r\n      let song = new Audio(clap);\r\n      song.play();\r\n     }\r\n\r\n }\r\n\r\n    function displayButtons() {\r\n\r\n      let mat = [[]], arr = [];\r\n      choice_items.map((option) => {\r\n          arr.push(option);\r\n      })\r\n\r\n      mat = [ [arr[0], arr[1]], [arr[2], arr[3]] ];\r\n          \r\n      return (\r\n          <div>        \r\n            {\r\n\r\n            mat.map((row, index) => ( \r\n              <div key={index} className=\"option-row\">\r\n                { row.map( (option) => {\r\n                    return (\r\n                            <div key={option.position + index}>\r\n                                <OptionHandler \r\n                                option={option} \r\n                                id={option.position} \r\n                                onOptionClick = {optionHandler}\r\n                                disableOption = {showCAB}\r\n                                cabClicked = {cabClicked}\r\n                                setChosen = {setIsCorrect}\r\n                                worthID = {worthID}\r\n                                /> \r\n                            </div>\r\n                          )\r\n                  } ) \r\n                }\r\n                </div>\r\n              ))\r\n\r\n            } \r\n        </div>\r\n      )\r\n    }\r\n\r\n    function Box() {\r\n      return (\r\n        <div>\r\n\r\n           {displayButtons()}\r\n    \r\n          <div style={{textAlign: \"center\", border:\"1px solid white\", backgroundColor: \"#283149\" }}>\r\n          \r\n            {showCAB ? <Button style={{color: \"#EFE9EF\"}} onClick={checkAnswer}> Check Answer </Button>: \r\n            <Button style={{color: \"white\"}} disabled={disableFreeze} onClick={freezeOptions} color=\"primary\">\r\n              Freeze\r\n            </Button>}\r\n\r\n          </div>\r\n          \r\n        </div>\r\n      )\r\n    }\r\n\r\n    return (\r\n        <div id=\"inner2\">\r\n            {showOptionBox ? Box() : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OptionBox\r\n"]},"metadata":{},"sourceType":"module"}