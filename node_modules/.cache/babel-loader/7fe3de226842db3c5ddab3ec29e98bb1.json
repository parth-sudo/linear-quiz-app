{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\anime-quiz\\\\frontface\\\\src\\\\components\\\\QuestionBox.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { Grid, Typography, Button, ButtonGroup } from \"@material-ui/core\";\nimport \"../styles/QuestionBox.css\";\nimport \"../styles/OptionBox.css\";\nimport Context from '../store/pause-context.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction QuestionBox(props) {\n  _s();\n\n  const {\n    freezed\n  } = useContext(Context);\n  const {\n    question,\n    worthID,\n    setWorthID,\n    setGameLost\n  } = props;\n  const [seconds, setSeconds] = useState(45);\n  useEffect(() => {\n    setTimeout(callTimer(), 5000);\n  }, []);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (!freezed) {\n        //I used '!freezed' because I set pause initially to false. \n        if (seconds > 0) {\n          setSeconds(seconds - 1);\n        }\n      }\n    }, 1000);\n    return () => clearInterval(interval);\n  });\n\n  const secondsChecker = () => {\n    if (seconds === 0) {\n      setGameLost(true);\n    }\n  };\n\n  const callTimer = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"time\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", seconds, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this);\n  };\n\n  function startGame() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"typeRacer\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wordOutput\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" Q \", worthID, \". \", question.title, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 12\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"inner1\",\n    children: [secondsChecker(), startGame()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n\n_s(QuestionBox, \"eyAcIciYBBOssgnPxgL7JKngess=\");\n\n_c = QuestionBox;\nexport default QuestionBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuestionBox\");","map":{"version":3,"sources":["D:/Projects/anime-quiz/frontface/src/components/QuestionBox.js"],"names":["React","useState","useEffect","useContext","Grid","Typography","Button","ButtonGroup","Context","QuestionBox","props","freezed","question","worthID","setWorthID","setGameLost","seconds","setSeconds","setTimeout","callTimer","interval","setInterval","clearInterval","secondsChecker","startGame","title"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,SAASC,IAAT,EAAeC,UAAf,EAA2BC,MAA3B,EAAmCC,WAAnC,QAAsD,mBAAtD;AAEA,OAAO,2BAAP;AACA,OAAO,yBAAP;AACA,OAAOC,OAAP,MAAoB,2BAApB;;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AAC1B,QAAM;AAAEC,IAAAA;AAAF,MAAcR,UAAU,CAACK,OAAD,CAA9B;AAEA,QAAM;AAAEI,IAAAA,QAAF;AAAYC,IAAAA,OAAZ;AAAqBC,IAAAA,UAArB;AAAiCC,IAAAA;AAAjC,MAAiDL,KAAvD;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBhB,QAAQ,CAAC,EAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAK;AACbgB,IAAAA,UAAU,CAACC,SAAS,EAAV,EAAc,IAAd,CAAV;AACD,GAFQ,EAEN,EAFM,CAAT;AAIAjB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMkB,QAAQ,GAAGC,WAAW,CAAC,MAAM;AACjC,UAAG,CAACV,OAAJ,EAAa;AAAE;AACb,YAAIK,OAAO,GAAG,CAAd,EAAiB;AACfC,UAAAA,UAAU,CAACD,OAAO,GAAG,CAAX,CAAV;AACD;AACF;AACF,KAN2B,EAMzB,IANyB,CAA5B;AAOA,WAAO,MAAMM,aAAa,CAACF,QAAD,CAA1B;AACD,GATQ,CAAT;;AAYA,QAAMG,cAAc,GAAG,MAAM;AAC3B,QAAGP,OAAO,KAAK,CAAf,EAAkB;AACdD,MAAAA,WAAW,CAAC,IAAD,CAAX;AACH;AACF,GAJD;;AAMA,QAAMI,SAAS,GAAG,MAAM;AACrB,wBACG;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,6BACA;AAAA,wBAAKH,OAAL;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YADH;AAKF,GAND;;AAQA,WAASQ,SAAT,GAAqB;AAEnB,wBACE;AAAK,MAAA,SAAS,EAAC,EAAf;AAAA,6BAIE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,iCACC;AAAA,8BAAOX,OAAP,QAAkBD,QAAQ,CAACa,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,YADF;AAeD;;AAED,sBACE;AAAK,IAAA,EAAE,EAAC,QAAR;AAAA,eACGF,cAAc,EADjB,EAEOC,SAAS,EAFhB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GA7DQf,W;;KAAAA,W;AA+DT,eAAeA,WAAf","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Grid, Typography, Button, ButtonGroup } from \"@material-ui/core\";\r\n\r\nimport \"../styles/QuestionBox.css\";\r\nimport \"../styles/OptionBox.css\";\r\nimport Context from '../store/pause-context.js';\r\n\r\nfunction QuestionBox(props) {\r\n  const { freezed } = useContext(Context);\r\n\r\n  const { question, worthID, setWorthID, setGameLost } = props;\r\n  const [seconds, setSeconds] = useState(45);\r\n  \r\n  useEffect(() =>{\r\n    setTimeout(callTimer(), 5000); \r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      if(!freezed) { //I used '!freezed' because I set pause initially to false. \r\n        if (seconds > 0) {\r\n          setSeconds(seconds - 1);\r\n        }\r\n      }\r\n    }, 1000);\r\n    return () => clearInterval(interval);\r\n  });\r\n\r\n  \r\n  const secondsChecker = () => {\r\n    if(seconds === 0) {\r\n        setGameLost(true);\r\n    }\r\n  }\r\n\r\n  const callTimer = () => {\r\n     return (\r\n        <div className=\"time\">\r\n        <p> {seconds} </p>\r\n        </div>\r\n     )\r\n  }\r\n  \r\n  function startGame() {\r\n\r\n    return (\r\n      <div className=\"\">\r\n\r\n        {/* {callTimer()}   */}\r\n\r\n        <div className=\"typeRacer\">\r\n          <div className=\"wordOutput\">\r\n           <p> Q {worthID}. {question.title} </p> \r\n        \r\n          </div>\r\n\r\n        </div>      \r\n\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div id=\"inner1\">\r\n      {secondsChecker()}\r\n          {startGame()}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default QuestionBox;\r\n\r\n"]},"metadata":{},"sourceType":"module"}