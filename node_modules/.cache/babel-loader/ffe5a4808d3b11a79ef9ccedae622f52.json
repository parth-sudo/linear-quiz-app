{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\anime-quiz\\\\frontface\\\\src\\\\components\\\\CreateQuestion.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Button, TextField, TextareaAutosize, FormGroup, Checkbox, Grid } from \"@material-ui/core\"; // import Checkbox from '@mui/material/Checkbox';\n\nimport \"../styles/CreateQ.css\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CreateQuestion() {\n  _s();\n\n  const [maxQID, setMaxQID] = useState(0);\n  useEffect(() => {\n    fetch(\"http://localhost:8000/api/list-q/\").then(response => response.json()).then(data => {\n      let arr = data,\n          mx = 0;\n\n      for (let i = 0; i < arr.length; i++) {\n        console.log(arr[i].id);\n        mx = Math.max(mx, arr[i].id);\n      }\n\n      setMaxQID(mx);\n      console.log(maxQID);\n    });\n  }, [maxQID]);\n\n  function handleSubmit(event) {\n    // event.preventDefault();\n    const worth = event.target.elements.worth.value;\n    const title = event.target.elements.title.value;\n    const trivia = event.target.elements.trivia.value;\n    const hint = event.target.elements.hint.value;\n    const qid = maxQID + 1;\n    const istrue1 = event.target.elements.isCorrect1.value;\n    console.log(qid);\n    const choice1 = event.target.elements.choice1.value;\n    axios.all([axios.post(\"http://localhost:8000/api/create-q/\", {\n      worth: worth,\n      title: title,\n      trivia: trivia,\n      hint: hint\n    }), axios.post(\"http://localhost:8000/api/create-c/\", {\n      question: qid,\n      choice: choice1,\n      position: 1,\n      is_correct: true\n    })]).then(axios.spread((data1, data2) => {\n      // output of req.\n      console.log('data1', data1, 'data2', data2);\n    })); // axios\n    //   .post(\"http://localhost:8000/api/create-c/\", {\n    //     worth: worth,\n    //     title: title,\n    //     trivia: trivia,\n    //     hint: hint,\n    //   })\n    //   .then((response) => console.log(response))\n    //   .catch((err) => console.log(err));\n\n    alert(\"question created successfully\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"question-creation-form\",\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmitCapture: event => handleSubmit(event),\n        children: /*#__PURE__*/_jsxDEV(FormGroup, {\n          style: {\n            margin: \"10px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Worth (1 for \\u20B91000, 2 for \\u20B92000, 15 for \\u20B91 crore and so on) \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            className: \"fields\",\n            required: true,\n            id: \"filled-required\",\n            label: \"Worth ID\",\n            variant: \"filled\",\n            name: \"worth\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Question\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            required: true,\n            id: \"filled-required\",\n            label: \"Title/question\",\n            defaultValue: \"\",\n            variant: \"filled\",\n            name: \"title\",\n            placeholder: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \" Option1 \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              className: \"fields\",\n              required: true,\n              id: \"filled-required\",\n              label: \"Choice\",\n              variant: \"filled\",\n              name: \"choice1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 16\n            }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n              className: \"fields\",\n              required: true,\n              name: \"isCorrect1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \" Trivia \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            className: \"fields\",\n            required: true,\n            id: \"filled-required\",\n            label: \"Trivia\",\n            defaultValue: \"\",\n            variant: \"filled\",\n            name: \"trivia\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \" Hint \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            required: true,\n            id: \"filled-required\",\n            label: \"Hint\",\n            defaultValue: \"\",\n            variant: \"filled\",\n            name: \"hint\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            label: \"Submit\",\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CreateQuestion, \"CD6ET2FFYLT79AV+e8b3ZmOFivQ=\");\n\n_c = CreateQuestion;\nexport default CreateQuestion;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateQuestion\");","map":{"version":3,"sources":["D:/Projects/anime-quiz/frontface/src/components/CreateQuestion.js"],"names":["React","useEffect","useState","Button","TextField","TextareaAutosize","FormGroup","Checkbox","Grid","axios","CreateQuestion","maxQID","setMaxQID","fetch","then","response","json","data","arr","mx","i","length","console","log","id","Math","max","handleSubmit","event","worth","target","elements","value","title","trivia","hint","qid","istrue1","isCorrect1","choice1","all","post","question","choice","position","is_correct","spread","data1","data2","alert","margin"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  TextField,\r\n  TextareaAutosize,\r\n  FormGroup,\r\n  Checkbox,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\n// import Checkbox from '@mui/material/Checkbox';\r\nimport \"../styles/CreateQ.css\";\r\nimport axios from \"axios\";\r\n\r\nfunction CreateQuestion() {\r\n\r\n  const [maxQID, setMaxQID] = useState(0); \r\n\r\n  useEffect(() => {\r\n\r\n    fetch(\"http://localhost:8000/api/list-q/\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        let arr = data, mx = 0;\r\n        for(let i=0; i<arr.length; i++) {\r\n          console.log(arr[i].id);\r\n          mx = Math.max(mx, arr[i].id);\r\n        }\r\n        setMaxQID(mx);\r\n        console.log(maxQID);\r\n      });\r\n\r\n  }, [maxQID])\r\n\r\n  function handleSubmit(event) {\r\n    // event.preventDefault();\r\n\r\n    const worth = event.target.elements.worth.value;\r\n    const title = event.target.elements.title.value;\r\n    const trivia = event.target.elements.trivia.value;\r\n    const hint = event.target.elements.hint.value;\r\n\r\n    const qid = maxQID + 1;\r\n    const istrue1 = event.target.elements.isCorrect1.value;\r\n    console.log(qid);\r\n    const choice1 = event.target.elements.choice1.value;\r\n\r\n    axios.all([\r\n   \r\n      axios.post(\"http://localhost:8000/api/create-q/\", {\r\n        worth: worth,\r\n        title: title,\r\n        trivia: trivia,\r\n        hint: hint,\r\n      }),\r\n      axios.post(\"http://localhost:8000/api/create-c/\", {\r\n        question : qid,\r\n        choice : choice1,\r\n        position : 1,\r\n        is_correct : true,\r\n      })\r\n    ])\r\n    .then(axios.spread((data1, data2) => {\r\n      // output of req.\r\n      console.log('data1', data1, 'data2', data2)\r\n    }));\r\n\r\n    // axios\r\n    //   .post(\"http://localhost:8000/api/create-c/\", {\r\n    //     worth: worth,\r\n    //     title: title,\r\n    //     trivia: trivia,\r\n    //     hint: hint,\r\n    //   })\r\n    //   .then((response) => console.log(response))\r\n    //   .catch((err) => console.log(err));\r\n\r\n    alert(\"question created successfully\");\r\n  }\r\n\r\n  return (\r\n    <div className=\"question-creation-form\">\r\n      <main>\r\n        <form onSubmitCapture={(event) => handleSubmit(event)}>\r\n          <FormGroup style={{ margin: \"10px\" }}>\r\n\r\n          <div>Worth (1 for ₹1000, 2 for ₹2000, 15 for ₹1 crore and so on) </div>\r\n\r\n            <TextField\r\n              className=\"fields\"\r\n              required\r\n              id=\"filled-required\"\r\n              label=\"Worth ID\"\r\n              variant=\"filled\"\r\n              name=\"worth\"\r\n            />\r\n\r\n            <div>Question</div>\r\n\r\n            <TextField\r\n              required\r\n              id=\"filled-required\"\r\n              label=\"Title/question\"\r\n              defaultValue=\"\"\r\n              variant=\"filled\"\r\n              name=\"title\"\r\n              placeholder=\"Title\"\r\n            />\r\n\r\n            <div> Option1 </div>\r\n\r\n        <FormGroup>\r\n               <TextField\r\n                className = \"fields\"\r\n                required\r\n                id=\"filled-required\"\r\n                label=\"Choice\"\r\n                variant=\"filled\"\r\n                name=\"choice1\"\r\n                />\r\n\r\n                <Checkbox\r\n                className = \"fields\"\r\n                required\r\n                name = \"isCorrect1\"\r\n                />\r\n\r\n        </FormGroup>\r\n\r\n           <div> Trivia </div>\r\n            <TextField\r\n              className=\"fields\"\r\n              required\r\n              id=\"filled-required\"\r\n              label=\"Trivia\"\r\n              defaultValue=\"\"\r\n              variant=\"filled\"\r\n              name=\"trivia\"\r\n            />\r\n            \r\n            <div> Hint </div>\r\n            <TextField\r\n              required\r\n              id=\"filled-required\"\r\n              label=\"Hint\"\r\n              defaultValue=\"\"\r\n              variant=\"filled\"\r\n              name=\"hint\"\r\n            />\r\n\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              label=\"Submit\"\r\n              type=\"submit\"\r\n            >\r\n              Submit\r\n            </Button>\r\n          </FormGroup>\r\n        </form>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateQuestion;\r\n"]},"metadata":{},"sourceType":"module"}