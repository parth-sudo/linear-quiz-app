{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\anime-quiz\\\\frontface\\\\src\\\\components\\\\QuestionBox.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { Grid, Typography, Button, ButtonGroup } from \"@material-ui/core\";\nimport \"../styles/QuestionBox.css\";\nimport \"../styles/OptionBox.css\";\nimport Context from '../store/pause-context.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction QuestionBox(props) {\n  _s();\n\n  const {\n    freezed\n  } = useContext(Context);\n  const {\n    question,\n    worthID,\n    setWorthID\n  } = props;\n  const [seconds, setSeconds] = useState(45);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (!freezed) {\n        //I used '!freezed' because I set pause initially to false. \n        if (seconds > 0) {\n          setSeconds(seconds - 1);\n        }\n      }\n    }, 1000);\n    return () => clearInterval(interval);\n  }); // const handlePauseToggle = () => {\n  //   setTimerPaused(!timerPaused);\n  // }\n\n  const quesCheck = q => {\n    console.log(q);\n  };\n\n  const timesUp = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \" Time's up! You lost the game. \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \" Correct Answer is - (actual ans)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  };\n\n  const questionAndTimer = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"time\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" \", seconds, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"typeRacer\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wordOutput\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" Q \", worthID, \". \", question.title, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 12\n          }, this), quesCheck(question.title)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n  };\n\n  function startGame() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: seconds > 0 ? questionAndTimer() : timesUp()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"inner1\",\n    children: startGame()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n\n_s(QuestionBox, \"o8Z/1c9pq4sswKItfNA1LQ6Op+8=\");\n\n_c = QuestionBox;\nexport default QuestionBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuestionBox\");","map":{"version":3,"sources":["D:/Projects/anime-quiz/frontface/src/components/QuestionBox.js"],"names":["React","useState","useEffect","useContext","Grid","Typography","Button","ButtonGroup","Context","QuestionBox","props","freezed","question","worthID","setWorthID","seconds","setSeconds","interval","setInterval","clearInterval","quesCheck","q","console","log","timesUp","questionAndTimer","title","startGame"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,SAASC,IAAT,EAAeC,UAAf,EAA2BC,MAA3B,EAAmCC,WAAnC,QAAsD,mBAAtD;AAEA,OAAO,2BAAP;AACA,OAAO,yBAAP;AACA,OAAOC,OAAP,MAAoB,2BAApB;;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AAC1B,QAAM;AAAEC,IAAAA;AAAF,MAAcR,UAAU,CAACK,OAAD,CAA9B;AAEA,QAAM;AAAEI,IAAAA,QAAF;AAAYC,IAAAA,OAAZ;AAAqBC,IAAAA;AAArB,MAAoCJ,KAA1C;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAC,EAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMe,QAAQ,GAAGC,WAAW,CAAC,MAAM;AACjC,UAAG,CAACP,OAAJ,EAAa;AAAE;AACb,YAAII,OAAO,GAAG,CAAd,EAAiB;AACfC,UAAAA,UAAU,CAACD,OAAO,GAAG,CAAX,CAAV;AACD;AACF;AACF,KAN2B,EAMzB,IANyB,CAA5B;AAOA,WAAO,MAAMI,aAAa,CAACF,QAAD,CAA1B;AACD,GATQ,CAAT,CAN0B,CAiB1B;AACA;AACA;;AAEA,QAAMG,SAAS,GAAIC,CAAD,IAAO;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACD,GAFD;;AAIA,QAAMG,OAAO,GAAG,MAAM;AACpB,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD,GAPD;;AASA,QAAMC,gBAAgB,GAAG,MAAM;AAE7B,wBAEE;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,+BACE;AAAA,0BAAKV,OAAL;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADJ,eAME;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,kCACC;AAAA,8BAAOF,OAAP,QAAkBD,QAAQ,CAACc,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD,EAGEN,SAAS,CAACR,QAAQ,CAACc,KAAV,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAsBD,GAxBD;;AA0BA,WAASC,SAAT,GAAqB;AAEnB,wBACE;AAAK,MAAA,SAAS,EAAC,EAAf;AAAA,gBACGZ,OAAO,GAAG,CAAV,GAAcU,gBAAgB,EAA9B,GAAmCD,OAAO;AAD7C;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAED,sBACE;AAAK,IAAA,EAAE,EAAC,QAAR;AAAA,cACOG,SAAS;AADhB;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GA1EQlB,W;;KAAAA,W;AA4ET,eAAeA,WAAf","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Grid, Typography, Button, ButtonGroup } from \"@material-ui/core\";\r\n\r\nimport \"../styles/QuestionBox.css\";\r\nimport \"../styles/OptionBox.css\";\r\nimport Context from '../store/pause-context.js';\r\n\r\nfunction QuestionBox(props) {\r\n  const { freezed } = useContext(Context);\r\n\r\n  const { question, worthID, setWorthID } = props;\r\n  const [seconds, setSeconds] = useState(45);\r\n  \r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      if(!freezed) { //I used '!freezed' because I set pause initially to false. \r\n        if (seconds > 0) {\r\n          setSeconds(seconds - 1);\r\n        }\r\n      }\r\n    }, 1000);\r\n    return () => clearInterval(interval);\r\n  });\r\n  \r\n  // const handlePauseToggle = () => {\r\n  //   setTimerPaused(!timerPaused);\r\n  // }\r\n\r\n  const quesCheck = (q) => {\r\n    console.log(q);\r\n  }\r\n  \r\n  const timesUp = () => {\r\n    return (\r\n      <div>\r\n        <h2> Time's up! You lost the game. </h2>\r\n        <h3> Correct Answer is - (actual ans)</h3>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const questionAndTimer = () => {\r\n\r\n    return (\r\n\r\n      <div>\r\n          <div className=\"time\">\r\n            <p> {seconds} </p>\r\n          </div>\r\n  \r\n\r\n        <div className=\"typeRacer\">\r\n          <div className=\"wordOutput\">\r\n           <p> Q {worthID}. {question.title} </p> \r\n\r\n           {quesCheck(question.title)}\r\n        \r\n          </div>\r\n\r\n\r\n          {/* set timeout of 7s. */}\r\n        </div>\r\n\r\n      </div>\r\n    )\r\n  }\r\n\r\n  function startGame() {\r\n\r\n    return (\r\n      <div className=\"\">\r\n        {seconds > 0 ? questionAndTimer() : timesUp() } \r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div id=\"inner1\">\r\n          {startGame()}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default QuestionBox;\r\n\r\n"]},"metadata":{},"sourceType":"module"}