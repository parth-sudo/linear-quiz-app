{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\anime-quiz\\\\frontface\\\\src\\\\components\\\\Ladder.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react'; // import axios from 'axios';\n\nimport '../styles/Ladder.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Ladder(props) {\n  _s();\n\n  const {\n    worths,\n    worthID\n  } = props;\n  const [prevWorthID, setPrevWorthID] = useState(worthID);\n\n  function ladderChecker(id, price) {\n    if (id === 5 || id === 10 || id === 15) {\n      if (worthID > id) {\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"crossed-line-checkpoint\",\n          children: [\" \", id, \". \\u20B9\", price, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 24\n        }, this);\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"checkpoint\",\n        children: [\" \", id, \". \\u20B9\", price, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 18\n      }, this);\n    }\n\n    if (worthID > id) {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"crossed-line\",\n        children: [\" \", id, \". \\u20B9\", price, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 20\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button_style\",\n      children: [\" \", id, \". \\u20B9\", price, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ladder\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" KBC LADDER \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: worthID > 1 ? /*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            color: 'whitesmoke'\n          },\n          children: [\" Current Amount won - \", worths[worthID - 2].cost, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 32\n        }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            color: 'whitesmoke'\n          },\n          children: \" Amount - 0 \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 120\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'center'\n        },\n        className: \"lcp\",\n        children: worths.slice(0).reverse().map(w => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"checkpoints\",\n            children: ladderChecker(w.id, w.cost)\n          }, w.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Ladder, \"y27genKqYT0AXqV66fshryecWTE=\");\n\n_c = Ladder;\nexport default Ladder;\n\nvar _c;\n\n$RefreshReg$(_c, \"Ladder\");","map":{"version":3,"sources":["D:/Projects/anime-quiz/frontface/src/components/Ladder.js"],"names":["React","useState","useEffect","Ladder","props","worths","worthID","prevWorthID","setPrevWorthID","ladderChecker","id","price","textAlign","color","cost","slice","reverse","map","w"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC,C,CACA;;AACA,OAAO,sBAAP;;;AAEA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAAA;;AACnB,QAAM;AAACC,IAAAA,MAAD;AAASC,IAAAA;AAAT,MAAoBF,KAA1B;AACA,QAAM,CAACG,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAACK,OAAD,CAA9C;;AAEA,WAASG,aAAT,CAAuBC,EAAvB,EAA2BC,KAA3B,EAAkC;AAC9B,QAAGD,EAAE,KAAK,CAAP,IAAYA,EAAE,KAAK,EAAnB,IAAyBA,EAAE,KAAK,EAAnC,EAAuC;AACnC,UAAGJ,OAAO,GAAGI,EAAb,EAAiB;AACb,4BAAO;AAAQ,UAAA,SAAS,EAAC,yBAAlB;AAAA,0BAA8CA,EAA9C,cAAqDC,KAArD;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH;;AACJ,0BAAQ;AAAQ,QAAA,SAAS,EAAC,YAAlB;AAAA,wBAAiCD,EAAjC,cAAwCC,KAAxC;AAAA;AAAA;AAAA;AAAA;AAAA,cAAR;AACA;;AAED,QAAGL,OAAO,GAAGI,EAAb,EAAiB;AACb,0BAAO;AAAQ,QAAA,SAAS,EAAC,cAAlB;AAAA,wBAAmCA,EAAnC,cAA0CC,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;;AAED,wBAAQ;AAAQ,MAAA,SAAS,EAAC,cAAlB;AAAA,sBAAmCD,EAAnC,cAA0CC,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA,YAAR;AACH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,SAAS,EAAE;AAAZ,OAAZ;AAAA,8BAEI;AAAA,kBACCN,OAAO,GAAG,CAAV,gBAAc;AAAI,UAAA,KAAK,EAAE;AAACO,YAAAA,KAAK,EAAC;AAAP,WAAX;AAAA,+CAAwDR,MAAM,CAACC,OAAO,GAAC,CAAT,CAAN,CAAkBQ,IAA1E;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAd,gBAAsG;AAAI,UAAA,KAAK,EAAE;AAACD,YAAAA,KAAK,EAAC;AAAP,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADvG;AAAA;AAAA;AAAA;AAAA,cAFJ,eAQA;AAAK,QAAA,KAAK,EAAE;AAACD,UAAAA,SAAS,EAAE;AAAZ,SAAZ;AAAmC,QAAA,SAAS,EAAC,KAA7C;AAAA,kBAEOP,MAAM,CAACU,KAAP,CAAa,CAAb,EAAgBC,OAAhB,GAA0BC,GAA1B,CAA+BC,CAAD,IAAO;AACpC,8BACI;AAAgB,YAAA,SAAS,EAAC,aAA1B;AAAA,sBACKT,aAAa,CAACS,CAAC,CAACR,EAAH,EAAOQ,CAAC,CAACJ,IAAT;AADlB,aAAUI,CAAC,CAACR,EAAZ;AAAA;AAAA;AAAA;AAAA,kBADJ;AAKC,SANF;AAFP;AAAA;AAAA;AAAA;AAAA,cARA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA8BH;;GAjDQP,M;;KAAAA,M;AAmDT,eAAeA,MAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\r\n// import axios from 'axios';\r\nimport '../styles/Ladder.css';\r\n\r\nfunction Ladder(props) {\r\n    const {worths, worthID} = props;\r\n    const [prevWorthID, setPrevWorthID] = useState(worthID);\r\n\r\n    function ladderChecker(id, price) {\r\n        if(id === 5 || id === 10 || id === 15) {\r\n            if(worthID > id) {\r\n                return(<button className=\"crossed-line-checkpoint\"> {id}. ₹{price} </button>) \r\n            }\r\n         return (<button className=\"checkpoint\"> {id}. ₹{price} </button>);\r\n        }\r\n\r\n        if(worthID > id) {\r\n            return(<button className=\"crossed-line\"> {id}. ₹{price} </button>) \r\n        }\r\n       \r\n        return (<button className=\"button_style\"> {id}. ₹{price} </button>);\r\n    }\r\n\r\n    return (\r\n        <div className=\"ladder\">\r\n            <div className=\"title\">\r\n                <p> KBC LADDER </p>\r\n            </div>\r\n            <div style={{textAlign: 'center'}}>\r\n\r\n                <div>\r\n                {worthID > 1 ? <h3 style={{color:'whitesmoke'}}> Current Amount won - {worths[worthID-2].cost} </h3> : <h3 style={{color:'whitesmoke'}}> Amount - 0 </h3> }\r\n                </div>\r\n\r\n            {/* cover the checkpoint. */}\r\n\r\n            <div style={{textAlign: 'center'}} className=\"lcp\">\r\n\r\n                {  worths.slice(0).reverse().map((w) => {\r\n                    return (\r\n                        <div key={w.id} className=\"checkpoints\">\r\n                            {ladderChecker(w.id, w.cost)}\r\n                        </div>\r\n                    )\r\n                    }) \r\n                }    \r\n                \r\n            </div>\r\n              \r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Ladder\r\n"]},"metadata":{},"sourceType":"module"}