{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\anime-quiz\\\\frontface\\\\src\\\\components\\\\QuestionBox.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { Grid, Typography, Button, ButtonGroup } from \"@material-ui/core\";\nimport \"../styles/QuestionBox.css\";\nimport OptionHandler from \"./OptionHandler.js\";\nimport Context from '../store/pause-context.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction QuestionBox(props) {\n  _s();\n\n  const {\n    timerPaused,\n    setTimerPaused\n  } = useContext(Context);\n  const {\n    question,\n    worthID,\n    setWorthID\n  } = props;\n  const [animation, setAnimation] = useState(null);\n  const [seconds, setSeconds] = useState(45);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (!timerPaused) {\n        //I used '!paused' because I set pause initially to false. \n        if (seconds > 0) {\n          setSeconds(seconds - 1);\n        }\n      }\n    }, 1000);\n    return () => clearInterval(interval);\n  }); // const handlePauseToggle = () => {\n  //   setTimerPaused(!timerPaused);\n  // }\n\n  function startGame() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"typeRacer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          animation: animation !== null ? animation : \"\"\n        },\n        className: \"time\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" \", seconds, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"typeRacer\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wordOutput\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" Q \", worthID, \". \", question.title, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \" Chuklanion. \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"typeRacer\",\n    children: startGame()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n_s(QuestionBox, \"VlvQRd5Y+EveNeLGJmt28pdWI1I=\");\n\n_c = QuestionBox;\nexport default QuestionBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuestionBox\");","map":{"version":3,"sources":["D:/Projects/anime-quiz/frontface/src/components/QuestionBox.js"],"names":["React","useState","useEffect","useContext","Grid","Typography","Button","ButtonGroup","OptionHandler","Context","QuestionBox","props","timerPaused","setTimerPaused","question","worthID","setWorthID","animation","setAnimation","seconds","setSeconds","interval","setInterval","clearInterval","startGame","title"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,SAASC,IAAT,EAAeC,UAAf,EAA2BC,MAA3B,EAAmCC,WAAnC,QAAsD,mBAAtD;AAEA,OAAO,2BAAP;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,OAAOC,OAAP,MAAoB,2BAApB;;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AAC1B,QAAM;AAAEC,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAAkCV,UAAU,CAACM,OAAD,CAAlD;AAEA,QAAM;AAAEK,IAAAA,QAAF;AAAYC,IAAAA,OAAZ;AAAqBC,IAAAA;AAArB,MAAoCL,KAA1C;AAEA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BjB,QAAQ,CAAC,IAAD,CAA1C;AAEA,QAAM,CAACkB,OAAD,EAAUC,UAAV,IAAwBnB,QAAQ,CAAC,EAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMmB,QAAQ,GAAGC,WAAW,CAAC,MAAM;AACjC,UAAG,CAACV,WAAJ,EAAiB;AAAE;AACjB,YAAIO,OAAO,GAAG,CAAd,EAAiB;AACfC,UAAAA,UAAU,CAACD,OAAO,GAAG,CAAX,CAAV;AACD;AACF;AACF,KAN2B,EAMzB,IANyB,CAA5B;AAOA,WAAO,MAAMI,aAAa,CAACF,QAAD,CAA1B;AACD,GATQ,CAAT,CAT0B,CAoB1B;AACA;AACA;;AAEA,WAASG,SAAT,GAAqB;AAEnB,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE;AAAK,QAAA,KAAK,EAAI;AAACP,UAAAA,SAAS,EAAGA,SAAS,KAAK,IAAd,GAAqBA,SAArB,GAAiC;AAA9C,SAAd;AAAiE,QAAA,SAAS,EAAC,MAA3E;AAAA,+BACE;AAAA,0BAAKE,OAAL;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,iCACE;AAAA,8BAAOJ,OAAP,QAAkBD,QAAQ,CAACW,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE;AAAA,iCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAmBD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,cACOD,SAAS;AADhB;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GApDQd,W;;KAAAA,W;AAsDT,eAAeA,WAAf","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Grid, Typography, Button, ButtonGroup } from \"@material-ui/core\";\r\n\r\nimport \"../styles/QuestionBox.css\";\r\nimport OptionHandler from \"./OptionHandler.js\";\r\nimport Context from '../store/pause-context.js';\r\n\r\nfunction QuestionBox(props) {\r\n  const { timerPaused, setTimerPaused } = useContext(Context);\r\n\r\n  const { question, worthID, setWorthID } = props;\r\n\r\n  const [animation, setAnimation] = useState(null);\r\n\r\n  const [seconds, setSeconds] = useState(45);\r\n  \r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      if(!timerPaused) { //I used '!paused' because I set pause initially to false. \r\n        if (seconds > 0) {\r\n          setSeconds(seconds - 1);\r\n        }\r\n      }\r\n    }, 1000);\r\n    return () => clearInterval(interval);\r\n  });\r\n  \r\n  // const handlePauseToggle = () => {\r\n  //   setTimerPaused(!timerPaused);\r\n  // }\r\n  \r\n  function startGame() {\r\n\r\n    return (\r\n      <div className=\"typeRacer\">\r\n        <div style = {{animation : animation !== null ? animation : \"\"}} className=\"time\">\r\n          <p> {seconds} </p>\r\n        </div>\r\n\r\n        <div className=\"typeRacer\">\r\n          <div className=\"wordOutput\">\r\n            <p> Q {worthID}. {question.title} </p>\r\n          </div>\r\n\r\n          <div>\r\n            <h2> Chuklanion. </h2>\r\n          </div>\r\n\r\n          {/* set timeout of 7s. */}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"typeRacer\">\r\n          {startGame()}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default QuestionBox;\r\n\r\n"]},"metadata":{},"sourceType":"module"}