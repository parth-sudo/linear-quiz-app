{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\anime-quiz\\\\frontface\\\\src\\\\components\\\\CreateOption.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Button, TextField, TextareaAutosize, FormGroup, Checkbox } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport \"../styles/CreateQ.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CreateOption() {\n  _s();\n\n  const [maxQID, setMaxQID] = useState(0);\n  useEffect(() => {\n    fetch(\"http://localhost:8000/api/list-q/\").then(response => response.json()).then(data => {\n      let arr = data,\n          mx = 0;\n\n      for (let i = 0; i < arr.length; i++) {\n        console.log(arr[i].id);\n        mx = Math.max(mx, arr[i].id);\n      }\n\n      setMaxQID(mx);\n      console.log(maxQID);\n    });\n  }, [maxQID]);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const boolstr = event.target.elements.correctCheck.value;\n    let isCorrect = false;\n    let qid = maxQID;\n\n    if (boolstr === \"true\") {\n      isCorrect = true;\n    } // const requestOptions = {\n    //     method: 'POST',\n    //     headers: { 'Content-Type': 'application/json' },\n    //     body: JSON.stringify({     \n    //         question : qid,\n    //         choice : event.target.elements.choiceName.value,\n    //         position : event.target.elements.position.value,\n    //         is_correct : isCorrect \n    //     })\n    // };\n    // fetch('http://127.0.0.1:8000/api/create-c/', requestOptions)\n    //     .then(response => response.json())\n    //     .then(data => console.log(data));\n\n\n    console.log(qid);\n    axios.post(\"http://localhost:8000/api/create-c/\", {\n      question: event.target.elements.questionID.value,\n      choice: event.target.elements.choiceName.value,\n      position: event.target.elements.position.value,\n      is_correct: isCorrect\n    }).then(response => console.log(response)).catch(err => console.log(err));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"question-creation-form\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmitCapture: event => handleSubmit(event),\n      children: /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          className: \"fields\",\n          required: true,\n          id: \"filled-required\",\n          label: \"QID\",\n          defaultValue: maxQID,\n          variant: \"filled\",\n          type: \"number\",\n          name: \"questionID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          className: \"fields\",\n          required: true,\n          id: \"filled-required\",\n          label: \"Choice\",\n          variant: \"filled\",\n          name: \"choiceName\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          className: \"fields\",\n          required: true,\n          id: \"filled-required\",\n          label: \"Position\",\n          variant: \"filled\",\n          type: \"number\",\n          name: \"position\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          className: \"fields\",\n          required: true,\n          id: \"filled-required\",\n          label: \"Correct?\",\n          defaultValue: \"false\",\n          variant: \"filled\",\n          name: \"correctCheck\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          label: \"Submit\",\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CreateOption, \"CD6ET2FFYLT79AV+e8b3ZmOFivQ=\");\n\n_c = CreateOption;\nexport default CreateOption;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateOption\");","map":{"version":3,"sources":["D:/Projects/anime-quiz/frontface/src/components/CreateOption.js"],"names":["React","useState","useEffect","Button","TextField","TextareaAutosize","FormGroup","Checkbox","axios","CreateOption","maxQID","setMaxQID","fetch","then","response","json","data","arr","mx","i","length","console","log","id","Math","max","handleSubmit","event","preventDefault","boolstr","target","elements","correctCheck","value","isCorrect","qid","post","question","questionID","choice","choiceName","position","is_correct","catch","err"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport { Button, TextField, TextareaAutosize, FormGroup, Checkbox } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport \"../styles/CreateQ.css\";\r\n\r\nfunction CreateOption() {\r\n\r\nconst [maxQID, setMaxQID] = useState(0); \r\n\r\n  useEffect(() => {\r\n\r\n    fetch(\"http://localhost:8000/api/list-q/\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        let arr = data, mx = 0;\r\n        for(let i=0; i<arr.length; i++) {\r\n          console.log(arr[i].id);\r\n          mx = Math.max(mx, arr[i].id);\r\n        }\r\n        setMaxQID(mx);\r\n        console.log(maxQID);\r\n      });\r\n\r\n  }, [maxQID])\r\n\r\nconst handleSubmit = (event) => {\r\n\r\n    event.preventDefault();\r\n\r\n    const boolstr = event.target.elements.correctCheck.value;\r\n    let isCorrect = false;\r\n    let qid = maxQID;\r\n    if(boolstr === \"true\") {\r\n        isCorrect = true;\r\n    }\r\n\r\n    // const requestOptions = {\r\n    //     method: 'POST',\r\n    //     headers: { 'Content-Type': 'application/json' },\r\n    //     body: JSON.stringify({     \r\n    //         question : qid,\r\n    //         choice : event.target.elements.choiceName.value,\r\n    //         position : event.target.elements.position.value,\r\n    //         is_correct : isCorrect \r\n    //     })\r\n    // };\r\n    // fetch('http://127.0.0.1:8000/api/create-c/', requestOptions)\r\n    //     .then(response => response.json())\r\n    //     .then(data => console.log(data));\r\n\r\n\r\n    console.log(qid);\r\n    axios.post(\"http://localhost:8000/api/create-c/\", {\r\n                question : event.target.elements.questionID.value,\r\n                choice : event.target.elements.choiceName.value,\r\n                position : event.target.elements.position.value,\r\n                is_correct : isCorrect,\r\n      })\r\n      .then((response) => console.log(response))\r\n      .catch((err) => console.log(err));\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"question-creation-form\">\r\n            <form onSubmitCapture = {((event) => handleSubmit(event))}> \r\n            <FormGroup> \r\n\r\n            <TextField\r\n                className = \"fields\"\r\n                required\r\n                id=\"filled-required\"\r\n                label=\"QID\"\r\n                defaultValue = {maxQID}\r\n                \r\n                variant=\"filled\"\r\n                type = \"number\"\r\n                name=\"questionID\"\r\n                />\r\n               \r\n                <TextField\r\n                className = \"fields\"\r\n                required\r\n                id=\"filled-required\"\r\n                label=\"Choice\"\r\n                variant=\"filled\"\r\n                name=\"choiceName\"\r\n                />\r\n\r\n                <TextField\r\n                className = \"fields\"\r\n                required\r\n                id=\"filled-required\"\r\n                label=\"Position\"\r\n                variant=\"filled\"\r\n                type = \"number\"\r\n                name=\"position\"\r\n                />\r\n\r\n                <TextField\r\n                className = \"fields\"\r\n                required\r\n                id=\"filled-required\"\r\n                label=\"Correct?\"\r\n                defaultValue = \"false\"\r\n                variant=\"filled\"\r\n                name=\"correctCheck\"\r\n                />\r\n            \r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              label=\"Submit\"\r\n              type=\"submit\"\r\n            >\r\n              Submit\r\n            </Button>\r\n         </FormGroup>\r\n    \r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateOption\r\n"]},"metadata":{},"sourceType":"module"}