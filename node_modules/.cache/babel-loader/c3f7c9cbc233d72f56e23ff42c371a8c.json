{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\Linear\\\\frontface\\\\src\\\\components\\\\Game.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, createContext, useContext } from \"react\";\nimport Container from \"./Container\";\nimport QuestionBox from \"./QuestionBox\";\nimport OptionBox from \"./OptionBox.js\";\nimport \"../styles/Game.css\";\nimport { Grid, Typography, Button, ButtonGroup } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport Context from \"../store/pause-context.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Questions = [{\n  index: 0,\n  title: \"Where is Taj Mahal located?\",\n  trivia: \"India\"\n}, {\n  index: 1,\n  title: \"What is 2 + 2?\",\n  trivia: \"It is 4\"\n}, {\n  index: 2,\n  title: \"What is 3 + 3\",\n  trivia: \"10-1\"\n}];\nconst Choices = [{\n  question: 0,\n  choice: \"India\",\n  position: 1,\n  is_correct: true\n}, {\n  question: 0,\n  choice: \"Pakistan\",\n  position: 2,\n  is_correct: false\n}, {\n  question: 0,\n  choice: \"Bangladesh\",\n  position: 3,\n  is_correct: false\n}, {\n  question: 0,\n  choice: \"Sri Lanka\",\n  position: 4,\n  is_correct: false\n}, {\n  question: 1,\n  choice: \"1\",\n  position: 1,\n  is_correct: false\n}, {\n  question: 1,\n  choice: \"2\",\n  position: 2,\n  is_correct: false\n}, {\n  question: 1,\n  choice: \"3\",\n  position: 3,\n  is_correct: false\n}, {\n  question: 1,\n  choice: \"4\",\n  position: 4,\n  is_correct: true\n}, {\n  question: 2,\n  choice: \"9\",\n  position: 1,\n  is_correct: false\n}, {\n  question: 2,\n  choice: \"3\",\n  position: 2,\n  is_correct: false\n}, {\n  question: 2,\n  choice: \"6\",\n  position: 3,\n  is_correct: true\n}, {\n  question: 2,\n  choice: \"10\",\n  position: 4,\n  is_correct: false\n}];\nexport default function Game() {\n  _s();\n\n  // get all choices, questions, worth.\n  const [choices, setChoices] = useState(Choices);\n  const [questions, setQuestions] = useState(Questions);\n  const [worthID, setWorthID] = useState(0);\n  const [prevID, setPrevID] = useState(1);\n  const [gameLost, setGameLost] = useState(false);\n  const [freezed, setFreezed] = useState(false);\n  const [choiceItems, setChoiceItems] = useState([]);\n  const [question, setQuestion] = useState(null);\n  const [rightAnswer, setRightAnswer] = useState(false);\n  const [correctChoice, setCorrectChoice] = useState({\n    pos: 0,\n    val: \"null\",\n    trivia: \"null\",\n    hint: \"null\"\n  });\n  const [TL, setTL] = useState(4000);\n  const [gameQuit, setGameQuit] = useState(false);\n  useEffect(() => {\n    console.log(worthID);\n\n    if (worthID > 0 && worthID <= questions.length) {\n      const question_items = questions.filter(question => {\n        return question.index === worthID - 1;\n      });\n      const question = question_items[0];\n      const choice_items = choices.filter(choice => choice.question === worthID - 1);\n      choices.forEach(choice => {\n        console.log(choice);\n      });\n      const sahiJawab = choice_items.find(c => c.is_correct) || {};\n      const obj = {\n        pos: 0,\n        val: \"null\",\n        trivia: \"null\"\n      };\n      obj.pos = sahiJawab.position;\n      obj.val = sahiJawab.choice;\n      obj.trivia = question.trivia;\n      setCorrectChoice(obj);\n      setQuestion(question);\n      setChoiceItems(choice_items);\n      console.log(choice_items);\n      let x = 60 / 130;\n      var arr = question.title.split(\" \");\n      let n = arr.length;\n      let y = n * x * 1000; // console.log(n);\n\n      setTL(y);\n    }\n  }, [worthID, questions, choices]); // prop function.\n\n  function timeUpCheck(s) {\n    if (s === 0) {\n      setGameLost(true);\n    }\n  } // prop function.\n\n\n  const getResult = (isCorrect, quit) => {\n    if (quit) {\n      setGameQuit(true);\n    } else if (isCorrect) {\n      // console.log(\" func get result says absolutely true\");\n      setWorthID(worthID + 1);\n      console.log(worthID);\n    } else {\n      setGameLost(true);\n    }\n  };\n\n  const alphabet = id => {\n    if (id === 1) {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \" A. \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 14\n      }, this);\n    } else if (id === 2) {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \" B. \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 14\n      }, this);\n    } else if (id === 3) {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \" C. \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 14\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \" D. \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 12\n    }, this);\n  };\n\n  function putNextQuestion() {\n    console.log(question.trivia);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pauseScreen\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          color: \"white\"\n        },\n        onClick: () => setRightAnswer(true),\n        children: [\" \", \"Right answer!\", /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \" Trivia \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" \", correctChoice.trivia, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"secondary\",\n          children: \" Next \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this);\n  }\n\n  const gameLostMessage = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pauseScreen\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\" \", \"Wrong! The correct answer is\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: \"lightgreen\"\n          },\n          children: [\" \", alphabet(correctChoice.pos), \" \", correctChoice.val, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \" Trivia \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", question.trivia, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"secondary\",\n        to: \"/\",\n        component: Link,\n        children: [\" \", \"Back to Home\", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this);\n  };\n\n  const gameWonMessage = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pauseScreen\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: \"lightgreen\"\n          },\n          children: \"Congratulations!!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), \" All answers are correct.\", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: \"orange\"\n          },\n          children: \"\\u20B91 crore!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \" Trivia \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", question.trivia, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\" \", \"You take away \", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: \"cyan\"\n          },\n          children: \" \\u20B91 crore! \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 25\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this);\n  };\n\n  const gameQuitMessage = () => {\n    console.log(correctChoice);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pauseScreen\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\" \", \"Thanks for playing. The correct answer is\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: \"lightgreen\"\n          },\n          children: [\" \", alphabet(correctChoice.pos), \" \", correctChoice.val, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \" Trivia \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", question.trivia, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"secondary\",\n        to: \"/\",\n        component: Link,\n        children: [\" \", \"Back to Home\", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this);\n  };\n\n  const resetStates = () => {\n    if (rightAnswer) {\n      setRightAnswer(false);\n      setPrevID(worthID);\n      setFreezed(false);\n    }\n  };\n\n  function continueGame() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [prevID < worthID && worthID <= questions.length ? putNextQuestion() : null, resetStates(), prevID === worthID && prevID >= 1 ? boxHolder() : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this);\n  }\n\n  function boxHolder() {\n    if (question !== null) {\n      return /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Context.Provider, {\n          value: {\n            freezed,\n            setFreezed\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(QuestionBox, {\n              worthID: worthID,\n              setWorthID: setWorthID,\n              question: question,\n              timeUpCheck: timeUpCheck,\n              TL: TL\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(OptionBox, {\n              choice_items: choiceItems,\n              worthID: worthID,\n              setWorthID: setWorthID,\n              getResult: getResult,\n              TL: TL\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [worthID === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pauseScreen\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            margin: \"0 auto\"\n          },\n          color: \"secondary\",\n          onClick: () => setWorthID(worthID + 1),\n          children: \"Begin!!!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 11\n      }, this) : worthID > questions.length ? gameWonMessage() : null, gameLost ? gameLostMessage() : gameQuit ? gameQuitMessage() : continueGame()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 258,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Game, \"VwaJVxoyP+Ehx4Czwz39t05s37M=\");\n\n_c = Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["D:/Projects/Linear/frontface/src/components/Game.js"],"names":["React","useState","useEffect","createContext","useContext","Container","QuestionBox","OptionBox","Grid","Typography","Button","ButtonGroup","Link","Context","Questions","index","title","trivia","Choices","question","choice","position","is_correct","Game","choices","setChoices","questions","setQuestions","worthID","setWorthID","prevID","setPrevID","gameLost","setGameLost","freezed","setFreezed","choiceItems","setChoiceItems","setQuestion","rightAnswer","setRightAnswer","correctChoice","setCorrectChoice","pos","val","hint","TL","setTL","gameQuit","setGameQuit","console","log","length","question_items","filter","choice_items","forEach","sahiJawab","find","c","obj","x","arr","split","n","y","timeUpCheck","s","getResult","isCorrect","quit","alphabet","id","putNextQuestion","color","gameLostMessage","gameWonMessage","gameQuitMessage","resetStates","continueGame","boxHolder","margin"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, createContext, useContext } from \"react\";\r\nimport Container from \"./Container\";\r\nimport QuestionBox from \"./QuestionBox\";\r\n\r\nimport OptionBox from \"./OptionBox.js\";\r\n\r\nimport \"../styles/Game.css\";\r\nimport { Grid, Typography, Button, ButtonGroup } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Context from \"../store/pause-context.js\";\r\n\r\nconst Questions = [\r\n  { index: 0, title: \"Where is Taj Mahal located?\", trivia: \"India\" },\r\n  { index: 1, title: \"What is 2 + 2?\", trivia: \"It is 4\" },\r\n  { index: 2, title: \"What is 3 + 3\", trivia: \"10-1\" },\r\n];\r\n\r\nconst Choices = [\r\n  { question: 0, choice: \"India\", position: 1, is_correct: true },\r\n  { question: 0, choice: \"Pakistan\", position: 2, is_correct: false },\r\n  { question: 0, choice: \"Bangladesh\", position: 3, is_correct: false },\r\n  { question: 0, choice: \"Sri Lanka\", position: 4, is_correct: false },\r\n\r\n  { question: 1, choice: \"1\", position: 1, is_correct: false },\r\n  { question: 1, choice: \"2\", position: 2, is_correct: false },\r\n  { question: 1, choice: \"3\", position: 3, is_correct: false },\r\n  { question: 1, choice: \"4\", position: 4, is_correct: true },\r\n\r\n  { question: 2, choice: \"9\", position: 1, is_correct: false },\r\n  { question: 2, choice: \"3\", position: 2, is_correct: false },\r\n  { question: 2, choice: \"6\", position: 3, is_correct: true },\r\n  { question: 2, choice: \"10\", position: 4, is_correct: false },\r\n];\r\n\r\nexport default function Game() {\r\n  // get all choices, questions, worth.\r\n\r\n  const [choices, setChoices] = useState(Choices);\r\n  const [questions, setQuestions] = useState(Questions);\r\n\r\n  const [worthID, setWorthID] = useState(0);\r\n  const [prevID, setPrevID] = useState(1);\r\n  const [gameLost, setGameLost] = useState(false);\r\n  const [freezed, setFreezed] = useState(false);\r\n  const [choiceItems, setChoiceItems] = useState([]);\r\n  const [question, setQuestion] = useState(null);\r\n  const [rightAnswer, setRightAnswer] = useState(false);\r\n  const [correctChoice, setCorrectChoice] = useState({\r\n    pos: 0,\r\n    val: \"null\",\r\n    trivia: \"null\",\r\n    hint: \"null\",\r\n  });\r\n  const [TL, setTL] = useState(4000);\r\n\r\n  const [gameQuit, setGameQuit] = useState(false);\r\n\r\n  useEffect(() => {\r\n    console.log(worthID);\r\n\r\n    if (worthID > 0 && worthID <= questions.length) {\r\n      const question_items = questions.filter((question) => {\r\n        return question.index === worthID - 1;\r\n      });\r\n\r\n      const question = question_items[0];\r\n\r\n      const choice_items = choices.filter(\r\n        (choice) => choice.question === worthID - 1\r\n      );\r\n\r\n      choices.forEach((choice) => {\r\n        console.log(choice);\r\n      });\r\n\r\n      const sahiJawab = choice_items.find((c) => c.is_correct) || {};\r\n      const obj = { pos: 0, val: \"null\", trivia: \"null\" };\r\n      obj.pos = sahiJawab.position;\r\n      obj.val = sahiJawab.choice;\r\n      obj.trivia = question.trivia;\r\n\r\n      setCorrectChoice(obj);\r\n      setQuestion(question);\r\n      setChoiceItems(choice_items);\r\n      console.log(choice_items);\r\n\r\n      let x = 60 / 130;\r\n      var arr = question.title.split(\" \");\r\n      let n = arr.length;\r\n      let y = n * x * 1000;\r\n      // console.log(n);\r\n      setTL(y);\r\n    }\r\n  }, [worthID, questions, choices]);\r\n\r\n  // prop function.\r\n  function timeUpCheck(s) {\r\n    if (s === 0) {\r\n      setGameLost(true);\r\n    }\r\n  }\r\n  // prop function.\r\n  const getResult = (isCorrect, quit) => {\r\n    if (quit) {\r\n      setGameQuit(true);\r\n    } else if (isCorrect) {\r\n      // console.log(\" func get result says absolutely true\");\r\n      setWorthID(worthID + 1);\r\n      console.log(worthID);\r\n    } else {\r\n      setGameLost(true);\r\n    }\r\n  }\r\n\r\n  const alphabet = (id) => {\r\n    if (id === 1) {\r\n      return <span> A. </span>;\r\n    } else if (id === 2) {\r\n      return <span> B. </span>;\r\n    } else if (id === 3) {\r\n      return <span> C. </span>;\r\n    }\r\n    return <span> D. </span>;\r\n  };\r\n\r\n  function putNextQuestion() {\r\n    console.log(question.trivia);\r\n    return (\r\n      <div className=\"pauseScreen\">\r\n        <h3 style={{ color: \"white\" }} onClick={() => setRightAnswer(true)}>\r\n          {\" \"}\r\n          Right answer!\r\n          <h2> Trivia </h2>\r\n         <p> {correctChoice.trivia} </p>\r\n          <Button color=\"secondary\"> Next </Button>\r\n        </h3>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const gameLostMessage = () => {\r\n    return (\r\n      <div className=\"pauseScreen\">\r\n        <h2>\r\n          {\" \"}\r\n          Wrong! The correct answer is{\" \"}\r\n          <span style={{ color: \"lightgreen\" }}>\r\n            {\" \"}\r\n            {alphabet(correctChoice.pos)} {correctChoice.val}{\" \"}\r\n          </span>{\" \"}\r\n        </h2>\r\n        <h2> Trivia </h2>\r\n        <p> {question.trivia} </p>\r\n        <Button color=\"secondary\" to=\"/\" component={Link}>\r\n          {\" \"}\r\n          Back to Home{\" \"}\r\n        </Button>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const gameWonMessage = () => {\r\n    return (\r\n      <div className=\"pauseScreen\">\r\n        <h1>\r\n          {\" \"}\r\n          <span style={{ color: \"lightgreen\" }}>Congratulations!!</span> All answers are correct.\r\n          <span style={{ color: \"orange\" }}>₹1 crore!</span>\r\n        </h1>\r\n        <h2> Trivia </h2>\r\n        <p> {question.trivia} </p>\r\n        <h3>\r\n          {\" \"}\r\n          You take away <span style={{ color: \"cyan\" }}> ₹1 crore! </span>{\" \"}\r\n        </h3>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const gameQuitMessage = () => {\r\n    console.log(correctChoice);\r\n    return (\r\n      <div className=\"pauseScreen\">\r\n        <h2>\r\n          {\" \"}\r\n          Thanks for playing. The correct answer is{\" \"}\r\n          <span style={{ color: \"lightgreen\" }}>\r\n            {\" \"}\r\n            {alphabet(correctChoice.pos)} {correctChoice.val}{\" \"}\r\n          </span>{\" \"}\r\n        </h2>\r\n        <h2> Trivia </h2>\r\n        <p> {question.trivia} </p>\r\n\r\n        <Button color=\"secondary\" to=\"/\" component={Link}>\r\n          {\" \"}\r\n          Back to Home{\" \"}\r\n        </Button>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const resetStates = () => {\r\n    if (rightAnswer) {\r\n      setRightAnswer(false);\r\n      setPrevID(worthID);\r\n      setFreezed(false);\r\n    }\r\n  };\r\n\r\n  function continueGame() {\r\n    return (\r\n      <div>\r\n  \r\n        {prevID < worthID && worthID <= questions.length\r\n          ? putNextQuestion()\r\n          : null}\r\n          \r\n        {resetStates()}\r\n\r\n        {prevID === worthID && prevID >= 1 ? boxHolder() : null}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function boxHolder() {\r\n    if (question !== null) {\r\n      return (\r\n        <Container>\r\n          {/* <button onClick={showHint}> Show Hint </button> */}\r\n          <Context.Provider value={{ freezed, setFreezed }}>\r\n           \r\n                <div id=\"wrapper\">\r\n                  <QuestionBox\r\n                    worthID={worthID}\r\n                    setWorthID={setWorthID}\r\n                    question={question}\r\n                    timeUpCheck={timeUpCheck}\r\n                    TL={TL}\r\n                  />\r\n\r\n                  <OptionBox\r\n                    choice_items={choiceItems}\r\n                    worthID={worthID}\r\n                    setWorthID={setWorthID}\r\n                    getResult={getResult}\r\n                    TL={TL}\r\n                  />\r\n              </div>\r\n            \r\n          </Context.Provider>\r\n        </Container>\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"game\">\r\n      {/* ready button */}\r\n      <div className=\"container\">\r\n        {worthID === 0 ? (\r\n          <div className=\"pauseScreen\">\r\n            <Button\r\n              style={{ margin: \"0 auto\" }}\r\n              color=\"secondary\"\r\n              onClick={() => setWorthID(worthID + 1)}\r\n            >\r\n              Begin!!!\r\n            </Button>\r\n          </div>\r\n        ) : worthID > questions.length ? (\r\n          gameWonMessage()\r\n        ) : null}\r\n\r\n        {gameLost\r\n          ? gameLostMessage()\r\n          : gameQuit\r\n          ? gameQuitMessage()\r\n          : continueGame()}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}